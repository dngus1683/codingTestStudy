// 귀찮음
// 현우는 무슨 이유에선지 길이 a1, ..., an의, 총 n개의 쇠막대가 필요해졌다. 하지만 그가 가진 것은 길이 a1+...+an의 하나의 쇠막대뿐이었다. 현우는 이 막대를 직접 잘라서 원래 필요하던 n개의 쇠막대를 만들 것이다. 길이 x+y인 막대를 길이 x, y인 두 개의 막대로 자를 때에는 만들려 하는 두 막대의 길이의 곱인 xy의 비용이 든다. 현우는 최소의 비용으로 이 쇠막대를 잘라서 a1, ..., an의 n개의 쇠막대를 얻고 싶다.
// 그런데 현우는 이 비용이 얼마나 들지 잘 모르겠다. 그래서 여러분이 막대를 자르는 최소 비용을 계산하는 프로그램을 작성해주면 코드잼 경시대회 점수를 30점 올려주겠다고 제안했다. 어떤가?


// 내 답안1
#include <iostream>

using namespace std;

int n;
long long sum = 0;
long long ans = 0;
int a[500000];

int main() {
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);

	cin >> n;
	for (int i = 0; i < n; i++) {
		cin >> a[i];
		sum += a[i];
	}
	for (int i = 0; i < n; i++) {
		sum -= a[i];
		ans += a[i] * sum;
	}


	cout << ans << '\n';
	return 0;
}



/*
* sum, ans 은 int의 범위에서 벗어나므로 long long으로 그 크기를 늘린다.
* 해당 문제는 하나의 막대를 연속된 2등분으로 a의 크기로 n개를 만들 때, 등분된 두 막대의 곱의 합들이 가장 작은 경우를 출력하는 것이다.
* 이는, 순서 상관없이 한개 씩 때면 항상 같은 값, 최솟값을 갖는다.
*/